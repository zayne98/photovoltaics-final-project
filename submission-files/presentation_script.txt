Intro:
This project is a bit less conventional than others, so bare with me.

With COVID's effects on work and school, many people have moved their lives onto the road, preferring to work entirely remotely from the comfort of an RV, Van, or truck.  I, for one, spent the summer driving around living out of my truck.

In my design (pictured), I did no fancy wiring.  The only electrical component I had was a lightbulb powered by a small battery pack, but I often wondered about the feasibility of strapping a solar panel to my 10ft long roof to help power certain appliances such as heaters, fans, stoves, or even to charge my laptop at night.

My goal with this project was to design a script in python that, given a google maps route for a road trip, segments the route and provides insight on the number of hours of charge time needed on each leg of the trip to fully charge a battery with a simple roof-mounted PV system.



Certainty:
In other words, if we take a cross country road trip route like the one pictured here from Augusta, Maine, to San Diego, CA, my script reports the expected hours per day that the panel should be exposed to direct sunlight.  This can be used as a rough metric for hours driven to fully charge your battery.  

Furthermore, it can provide insight into how this drive time changes by season.  The image pictured here shows drive time for per-state segments in the month of November, and this is what my program outputs for this google maps route.

Due to API limitations, my output cannot be exact, so it aims to approximate the average results for a specified month.  The code is very modular, so it can adapt to whatever specific battery you use or any panel you mount on your roof.  It also functions for literally any route you could plot in google maps so its very flexible and accurate in that regard.

Additionally, I use various Google Maps APIs to map locations to the coordinates and map coordinates to the states they fall within, so the geolocating involved in this project is certainly accurate. 



Assumptions:
Some components of this project require approximations.  Primarily, to compute current output and use current to compute battery charge time, I need to know the expected irradiance and surface temperature at the coordinates along the route.  Ideally, I would use an API provided by SoDa (Solar Radiation Data) to accurately request specific irradiation data at exact coordinates, for exact dates, and at given panel tilts, but this API requires a paid subscription.  Instead, the best approximation I could do is to use renewables.ninja and download per-state average irradiation data for every day/hour of the year.  This limits the accuracy of my data, as, for example, a waypoint in the desert of California will return the same irradiation as a waypoint in the middle of the forest, yet it's the best I can do now to approximate irradiation.

Secondly, as shown at right, I draw straight lines between waypoints to approximate the route.  This is mostly accurate, but does not account for random turns along the way.  Unfortunately, the google maps API to supply more accurate routing info also requires payment. 

If I had access to the full, paid, versions of these two APIs, the output of this program would be fantastically accurate.  



Example:
If I have time:
I thought I'd include a quick example of how you can drive time varies with the months.  Heres the output of the same Maine to California route predicted for a July road trip and a November road trip.  You can see that in the middle of the summer, the drive times are all quite reasonable, around 2 or 3 hours to fully charge the battery.  In the winter, some states show numbers that are simply not feasible given the sunlight available.  

Still, these plots show that as you move south and towards drier, desert states in the southwest, charge time decreases as irradiation increases. And in summer months when sunlight is more direct, charge time also decreases.

Code is on GitHub so literally anyone could use this as a resource when planning a trip if they wanted to.

